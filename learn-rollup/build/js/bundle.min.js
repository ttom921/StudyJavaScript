(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('axios')) :
  typeof define === 'function' && define.amd ? define(['axios'], factory) :
  (global = global || self, global.monitor = factory(global.axios));
}(this, (function (axios) { 'use strict';

  axios = axios && axios.hasOwnProperty('default') ? axios['default'] : axios;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  var util = {
    generatedId: function generatedId() {
      return Math.random().toString(36).substr(2);
    }
  };

  var userRequest = axios.create({
    baseURL: 'https://jsonplaceholder.typicode.com' //https://jsonplaceholder.typicode.com/posts
    // headers: {
    //     Authorization: 'Bearer ' + token //the token is a variable which holds the token
    // }
    // //     // 選項: 'arraybuffer', 'document', 'json', 'text', 'stream'
    // //     // 瀏覽器才有 'blob' ， 預設為 'json'
    // //     responseType: 'json', // 伺服器回應的數據類型
    // //     // 伺服器回應的編碼模式 預設 'utf8'
    // //     responseEncoding: 'utf8',

  }); // User 相關的 api
  // // //export const apiUserLogin = data => userRequest.post('/signIn', data);
  // // //export const apiUserLogout = data => userRequest.post('/signOut', data);
  // // //export const apiUserSignUp = data => userRequest.post('/signUp', data);
  // User相關的 api

  var postRequest = axios.create({
    baseURL: 'https://jsonplaceholder.typicode.com' //https://jsonplaceholder.typicode.com/posts
    // headers: {
    //     Authorization: 'Bearer ' + token //the token is a variable which holds the token
    // }
    // //     // 選項: 'arraybuffer', 'document', 'json', 'text', 'stream'
    // //     // 瀏覽器才有 'blob' ， 預設為 'json'
    // //     responseType: 'json', // 伺服器回應的數據類型
    // //     // 伺服器回應的編碼模式 預設 'utf8'
    // //     responseEncoding: 'utf8',

  }); //Post 相關的API

  var apiPostsGet = function apiPostsGet(data) {
    return postRequest.get('/posts', data);
  };
  var apiPostGet = function apiPostGet(data) {
    return postRequest.get('/posts', data);
  };
  var apiPostPost = function apiPostPost(data) {
    return postRequest.post('/posts', data);
  };

  var Engine =
  /*#__PURE__*/
  function () {
    function Engine() {
      _classCallCheck(this, Engine);

      this.id = util.generatedId();
    }

    _createClass(Engine, [{
      key: "init",
      value: function init(appid) {
        if (!appid) {
          console.log("error no appid");
          return;
        }

        this.appid = appid;
        console.log('引擎開始起動了…');
      }
    }, {
      key: "showAppid",
      value: function showAppid() {
        console.log('appid=' + this.appid);
      }
    }, {
      key: "GetUsers",
      value: function GetUsers() {
        //#region 取得所有的使用者
        //----------取得所有的使用者
        // apiUsersGet()
        //     .then((res) => { console.log(res.data) })
        //     .catch((error) => { console.error(error) })
        //     .finally(() => { /* 不論失敗成功皆會執行 */ });
        // //-------------使用token來取得所有的使用者
        // apiUsersGet({
        //     headers: {
        //         Authorization: 'Bearer ' + this.appid //the token is a variable which holds the token
        //     }
        // })
        //     .then((res) => { console.log(res.data) })
        //     .catch((error) => { console.error(error) })
        //     .finally(() => { /* 不論失敗成功皆會執行 */ });
        apiPostsGet().then(function (res) {
          console.log(res.data);
        })["catch"](function (error) {
          console.error(error);
        })["finally"](function () {
          /* 不論失敗成功皆會執行 */
        }); //end #region 取得所有的使用者

        apiPostPost({
          title: 'foo',
          body: 'bar',
          userId: 1
        }).then(function (res) {
          console.log(res.data);
        })["catch"](function (error) {
          console.error(error);
        })["finally"](function () {
          /* 不論失敗成功皆會執行 */
        });
        apiPostGet({
          params: {
            userId: 1
          }
        }).then(function (res) {
          console.log(res.data);
        })["catch"](function (error) {
          console.error(error);
        })["finally"](function () {
          /* 不論失敗成功皆會執行 */
        });
      }
    }]);

    return Engine;
  }(); //get Singleton


  var getHSApi = function () {
    var engine = null;
    return function () {
      if (!engine) {
        engine = new Engine();
      }

      return engine;
    };
  }();

  return getHSApi;

})));
