(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = global || self, global.Animals = factory());
}(this, (function () { 'use strict';

    class Animal {
        constructor(name) {
            this.name = name;
        }
        showName() {
            console.log('my name=' + this.name);
        }
        run() {
            console.log('i am run');
        }
        brake() {
            console.log('i am brake');
        }
    }

    class Dog extends Animal {
        constructor(name) {
            super(name);
        }
        brake() {
            console.log('汪汪汪');
        }
    }

    class Cat extends Animal {
        constructor(name) {
            super(name);
        }
        brake() {
            console.log('miao miao miao');
        }
    }

    class PoodleDob extends Dog {
        constructor(name) {
            super(name);
        }
        brake() {
            console.log('喔偓喔');
        }
    }

    // Import styles (automatically injected into <head>).

    const Animals = {
        Dog,
        Cat,
        PoodleDog: PoodleDob
    };

    return Animals;

})));
